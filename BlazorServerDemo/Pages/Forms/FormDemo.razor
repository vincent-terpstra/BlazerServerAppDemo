@page "/Forms"
<h3>FormDemo</h3>

    @*
    <div class="form-group row">
        <div class="col-sm-12 col-md-6 my-1"><InputText class="form-control" @bind-Value="NewTask.Task"/></div>
        <div class="col-sm-12 col-md-6 my-1"><button class="btn btn-outline-primary" type="submit">Add Task</button></div>
    </div>*@

<EditForm EditContext="@_context">
    <DataAnnotationsValidator/>
    <InputCheckbox id="checkbox" @bind-Value="_formModel.BooleanProp"/>
    <label for="checkbox">Checkbox Checked</label>
    <br/>
    <label for="inputDate">Select Date</label>
    <InputDate id="inputDate" class="form-control" @bind-Value=_formModel.DateTimeProp ParsingErrorMessage="Must be a date"/>
    <label for="inputInt">Input Int</label>
    <InputNumber id="inputInt" class="form-control" @bind-Value="_formModel.IntProp" ParsingErrorMessage="Must be an integer value"/>
    <label for="inputDecimal">Input Decimal</label>
    <InputNumber id="inputDecimal" class="form-control" @bind-Value="_formModel.DecimalProp" ParsingErrorMessage="Must be a decimal value"/>
    <label for="inputString">Input String</label>
    <InputText id="inputString" class="form-control" @bind-Value="_formModel.StringProp"/>
    <label for="inputMulti">Input Multiline</label>
    <InputTextArea id="inputMulti" class="form-control" @bind-Value="_formModel.SomeMultilineProp"/>
    <label for="selectEnum">Select Enum</label>
    <InputSelect id="selectEnum" class="form-control" @bind-Value="_formModel.SomeSelectProperty">
        <option value="Pending">Pending</option>
        <option value="Active">Active</option>
        <option value="Suspended">Suspended</option>
    </InputSelect>
    <label for="selectStringList">Select String</label>
    <InputSelect id="selectStringList" class="form-control" @bind-Value="_formModel.SelectedString">
        @foreach (var str in _formModel.ListProp)
        {
            <option value="@str">@str</option>
        }
    </InputSelect>
    <MyPageLock UnsavedChanges="@isModified"/>
    <label for="selectColor">Select Color</label>
    <InputColor @bind-Value="@_formModel.SelectedColor"/>
</EditForm>

<p>Form is modified: @_context.IsModified()</p>

<p> Favourite Color is @_formModel.SelectedColor</p>
<div style="width:100px;height:100px;background-color: @ColorAsHex"/>

@code {
    private bool isModified => _context.IsModified();
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _formModel = new();
        _context = new(_formModel);
        
    }
    
    SomeModel _formModel;
    EditContext _context;
    
    string ColorAsHex => InputColor.ColorToString(_formModel.SelectedColor);
    
    
    
}